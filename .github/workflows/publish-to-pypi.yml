# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: windows-latest  # Windows environment

    steps:
    # Step 1: Check out the latest code
    - uses: actions/checkout@v4

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'  # Using Python 3.x

    # Step 3: Install dependencies for building and uploading
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    # Step 4: Build the Python package
    - name: Build package
      run: python -m build

    # Step 5: Publish the package to PyPI
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}  # Make sure PYPI_API_TOKEN secret is set in repository settings
